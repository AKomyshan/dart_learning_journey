/// –ó–∞–≤–¥–∞–Ω–Ω—è 7: –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è switch statement
/// 1) –°—Ç–≤–æ—Ä—ñ—Ç—å –∑–º—ñ–Ω–Ω—É dayNumber –≤—ñ–¥ 1 –¥–æ 7.
/// 2) –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ switch, —â–æ–± –≤–∏–≤–µ—Å—Ç–∏:
/// –ü–æ–Ω–µ–¥—ñ–ª–æ–∫, –í—ñ–≤—Ç–æ—Ä–æ–∫, ‚Ä¶, –ù–µ–¥—ñ–ª—è.
/// 3) –Ø–∫—â–æ –¥–µ–Ω—å –Ω–µ –≤—ñ–¥ 1 –¥–æ 7 ‚Äî –≤–∏–≤–µ—Å—Ç–∏ ‚Äú–ù–µ–≤—ñ—Ä–Ω–∏–π –Ω–æ–º–µ—Ä –¥–Ω—è‚Äù.
/// 4) –î–æ–¥–∞—Ç–∫–æ–≤–æ: –¥–ª—è –≤–∏—Ö—ñ–¥–Ω–∏—Ö (6, 7) –≤–∏–≤–µ—Å—Ç–∏ ‚Äú–í–∏—Ö—ñ–¥–Ω–∏–π –¥–µ–Ω—å üéâ‚Äù.
(DayOfTheWeek, bool isHolyday) task7(int dayNumber) {
  switch (dayNumber) {
    case 1: return (DayOfTheWeek.monday, false);
    case 2: return (DayOfTheWeek.tuesday, false);
    case 3: return (DayOfTheWeek.wednesday, false);
    case 4: return (DayOfTheWeek.thursday, false);
    case 5: return (DayOfTheWeek.friday, false);
    case 6: return (DayOfTheWeek.saturday, true);
    case 7: return (DayOfTheWeek.sunday, true);
    default: throw ArgumentError('–ù–µ–≤—ñ—Ä–Ω–∏–π –Ω–æ–º–µ—Ä –¥–Ω—è');
  }
}

enum DayOfTheWeek {
  monday,
  tuesday,
  wednesday,
  thursday,
  friday,
  saturday,
  sunday,
}